---
import Layout from '../layouts/Layout.astro';
import { StorageService } from '../lib/storage';
import { Currency } from '../types/models';

// Get current settings
const settings = StorageService.getSettings();
---

<Layout title="Settings">
  <div class="max-w-2xl mx-auto px-4 py-6">
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <h2 class="text-2xl font-bold mb-6">Settings</h2>
      
      <form id="settingsForm" class="space-y-6">
        <!-- Currency -->
        <div>
          <label for="currency" class="block text-sm font-medium text-gray-700 mb-1">
            Currency
          </label>
          <select
            id="currency"
            name="currency"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            {Object.values(Currency).map(curr => (
              <option value={curr} selected={curr === settings.currency}>
                {curr}
              </option>
            ))}
          </select>
        </div>
        
        <!-- Heads Up Days -->
        <div>
          <label for="headsUpDays" class="block text-sm font-medium text-gray-700 mb-1">
            Heads Up Days
          </label>
          <input
            type="number"
            id="headsUpDays"
            name="headsUpDays"
            min="1"
            max="30"
            value={settings.headsUpDays}
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <p class="text-sm text-gray-500 mt-1">
            Number of days in advance to show products in your shopping list
          </p>
        </div>
        
        <!-- Budget Section -->
        <div class="border-t pt-6">
          <h3 class="text-lg font-semibold mb-4">Budget</h3>
          
          <div class="space-y-4">
            <div class="flex items-center">
              <input
                type="checkbox"
                id="budgetEnabled"
                name="budgetEnabled"
                checked={settings.budgetEnabled}
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="budgetEnabled" class="ml-2 block text-sm text-gray-900">
                Enable monthly budget
              </label>
            </div>
            
            <div id="budgetAmountContainer" class={settings.budgetEnabled ? '' : 'opacity-50'}>
              <label for="budgetAmount" class="block text-sm font-medium text-gray-700 mb-1">
                Monthly Budget Amount
              </label>
              <input
                type="number"
                id="budgetAmount"
                name="budgetAmount"
                min="0"
                step="0.01"
                value={settings.budgetAmount}
                disabled={!settings.budgetEnabled}
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:bg-gray-100"
              />
            </div>
          </div>
        </div>
        
        <!-- Save Button -->
        <div class="pt-4">
          <button
            type="submit"
            class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors"
          >
            Save Settings
          </button>
        </div>
      </form>
      
      <!-- Danger Zone -->
      <div class="mt-8 pt-8 border-t">
        <h3 class="text-lg font-semibold mb-4 text-red-600">Danger Zone</h3>
        <button
          id="clearDataBtn"
          class="bg-red-600 text-white py-2 px-4 rounded-lg hover:bg-red-700 transition-colors"
        >
          Clear All Data
        </button>
        <p class="text-sm text-gray-500 mt-2">
          This will permanently delete all your products and settings
        </p>
      </div>
    </div>
    
    <!-- About Section -->
    <div class="mt-6 text-center text-sm text-gray-500">
      <p>Smarket Web v1.0.0</p>
      <p class="mt-1">Smart shopping list and product tracker</p>
    </div>
  </div>
</Layout>

<script>
  import { StorageService } from '../lib/storage';
  
  const form = document.getElementById('settingsForm') as HTMLFormElement;
  const budgetEnabledCheckbox = document.getElementById('budgetEnabled') as HTMLInputElement;
  const budgetAmountContainer = document.getElementById('budgetAmountContainer') as HTMLDivElement;
  const budgetAmountInput = document.getElementById('budgetAmount') as HTMLInputElement;
  const clearDataBtn = document.getElementById('clearDataBtn') as HTMLButtonElement;
  
  // Toggle budget amount field
  budgetEnabledCheckbox.addEventListener('change', () => {
    const enabled = budgetEnabledCheckbox.checked;
    budgetAmountInput.disabled = !enabled;
    budgetAmountContainer.classList.toggle('opacity-50', !enabled);
  });
  
  // Handle form submission
  form.addEventListener('submit', (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const currency = formData.get('currency') as string;
    const headsUpDays = parseInt(formData.get('headsUpDays') as string);
    const budgetEnabled = budgetEnabledCheckbox.checked;
    const budgetAmount = parseFloat(formData.get('budgetAmount') as string) || 0;
    
    // Update settings
    StorageService.updateSettings({
      currency: currency as any,
      headsUpDays,
      budgetEnabled,
      budgetAmount
    });
    
    // Show success message
    const btn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    const originalText = btn.textContent;
    btn.textContent = 'Saved!';
    btn.classList.add('bg-green-600', 'hover:bg-green-700');
    btn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
    
    setTimeout(() => {
      btn.textContent = originalText;
      btn.classList.remove('bg-green-600', 'hover:bg-green-700');
      btn.classList.add('bg-blue-600', 'hover:bg-blue-700');
    }, 2000);
  });
  
  // Handle clear data
  clearDataBtn.addEventListener('click', () => {
    if (confirm('Are you sure you want to delete all data? This cannot be undone.')) {
      if (confirm('This will delete all your products and settings. Are you really sure?')) {
        StorageService.clearAll();
        window.location.href = '/';
      }
    }
  });
</script>
